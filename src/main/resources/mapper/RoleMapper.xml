<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tap2up.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.tap2up.pojo.Role">
    <id column="roleId" jdbcType="INTEGER" property="roleid" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="isAvailable" jdbcType="BIT" property="isavailable" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Base_Column_List">
    roleId, roleName, description, isAvailable, isDelete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where roleId = #{roleid,jdbcType=INTEGER} and isDelete = 0
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role
    where isDelete = 0
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    r.* from role r
    inner join user_role ur
    on r.roleId = ur.roleId
    inner join users u
    on u.userid = ur.userId
    where u.username = #{username}
    and r.isDelete = 0
  </select>
  <select id="selectByRid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select pm.* from permission pm
    left join role_permission rpm
    on pm.permissionId = rpm.permissionId
    where rpm.roleId = #{rId}
    and pm.isDelete = 0
  </select>
  <select id="findRoleByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select r.* from users u
    left join user_role ur
    on u.userId = ur.userId
    left join role r
    on ur.roleId = r.roleId
    where u.userId = #{uId}
    and r.isDelete = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where roleId = #{roleid,jdbcType=INTEGER}
  </delete>
  <delete id="deletePermissions" parameterType="java.util.List">
    delete from role_permission
    where (roleId, permissionId) in
    <foreach collection="pmIds" index="index" item="item" separator="," open="(" close=")">
      (
      #{rId},
      #{item}
      )
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.tap2up.pojo.Role">
    insert into role (roleId, roleName, description, 
      isAvailable, isDelete)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{isavailable,jdbcType=BIT}, #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tap2up.pojo.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        roleId,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="isavailable != null">
        isAvailable,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isavailable != null">
        #{isavailable,jdbcType=BIT},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="addPermissions" parameterType="java.util.List">
    insert into role_permission (roleId, permissionId)
    values
    <foreach collection="pmIds" index="index" item="item" separator=",">
      (
      #{rId},
      #{item}
      )
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tap2up.pojo.Role">
    update role
    <set>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isavailable != null">
        isAvailable = #{isavailable,jdbcType=BIT},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where roleId = #{roleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tap2up.pojo.Role">
    update role
    set roleName = #{rolename,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      isAvailable = #{isavailable,jdbcType=BIT},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where roleId = #{roleid,jdbcType=INTEGER}
  </update>
</mapper>